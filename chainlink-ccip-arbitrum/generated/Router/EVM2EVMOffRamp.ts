// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class AdminSet extends ethereum.Event {
  get params(): AdminSet__Params {
    return new AdminSet__Params(this);
  }
}

export class AdminSet__Params {
  _event: AdminSet;

  constructor(event: AdminSet) {
    this._event = event;
  }

  get newAdmin(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class ConfigSet extends ethereum.Event {
  get params(): ConfigSet__Params {
    return new ConfigSet__Params(this);
  }
}

export class ConfigSet__Params {
  _event: ConfigSet;

  constructor(event: ConfigSet) {
    this._event = event;
  }

  get staticConfig(): ConfigSetStaticConfigStruct {
    return changetype<ConfigSetStaticConfigStruct>(
      this._event.parameters[0].value.toTuple(),
    );
  }

  get dynamicConfig(): ConfigSetDynamicConfigStruct {
    return changetype<ConfigSetDynamicConfigStruct>(
      this._event.parameters[1].value.toTuple(),
    );
  }
}

export class ConfigSetStaticConfigStruct extends ethereum.Tuple {
  get commitStore(): Address {
    return this[0].toAddress();
  }

  get chainSelector(): BigInt {
    return this[1].toBigInt();
  }

  get sourceChainSelector(): BigInt {
    return this[2].toBigInt();
  }

  get onRamp(): Address {
    return this[3].toAddress();
  }

  get prevOffRamp(): Address {
    return this[4].toAddress();
  }

  get armProxy(): Address {
    return this[5].toAddress();
  }
}

export class ConfigSetDynamicConfigStruct extends ethereum.Tuple {
  get permissionLessExecutionThresholdSeconds(): BigInt {
    return this[0].toBigInt();
  }

  get router(): Address {
    return this[1].toAddress();
  }

  get priceRegistry(): Address {
    return this[2].toAddress();
  }

  get maxNumberOfTokensPerMsg(): i32 {
    return this[3].toI32();
  }

  get maxDataBytes(): BigInt {
    return this[4].toBigInt();
  }

  get maxPoolReleaseOrMintGas(): BigInt {
    return this[5].toBigInt();
  }
}

export class ConfigSet1 extends ethereum.Event {
  get params(): ConfigSet1__Params {
    return new ConfigSet1__Params(this);
  }
}

export class ConfigSet1__Params {
  _event: ConfigSet1;

  constructor(event: ConfigSet1) {
    this._event = event;
  }

  get previousConfigBlockNumber(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get configDigest(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get configCount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get signers(): Array<Address> {
    return this._event.parameters[3].value.toAddressArray();
  }

  get transmitters(): Array<Address> {
    return this._event.parameters[4].value.toAddressArray();
  }

  get f(): i32 {
    return this._event.parameters[5].value.toI32();
  }

  get onchainConfig(): Bytes {
    return this._event.parameters[6].value.toBytes();
  }

  get offchainConfigVersion(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get offchainConfig(): Bytes {
    return this._event.parameters[8].value.toBytes();
  }
}

export class ExecutionStateChanged extends ethereum.Event {
  get params(): ExecutionStateChanged__Params {
    return new ExecutionStateChanged__Params(this);
  }
}

export class ExecutionStateChanged__Params {
  _event: ExecutionStateChanged;

  constructor(event: ExecutionStateChanged) {
    this._event = event;
  }

  get sequenceNumber(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get messageId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get state(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get returnData(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }
}

export class OwnershipTransferRequested extends ethereum.Event {
  get params(): OwnershipTransferRequested__Params {
    return new OwnershipTransferRequested__Params(this);
  }
}

export class OwnershipTransferRequested__Params {
  _event: OwnershipTransferRequested;

  constructor(event: OwnershipTransferRequested) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PoolAdded extends ethereum.Event {
  get params(): PoolAdded__Params {
    return new PoolAdded__Params(this);
  }
}

export class PoolAdded__Params {
  _event: PoolAdded;

  constructor(event: PoolAdded) {
    this._event = event;
  }

  get token(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get pool(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PoolRemoved extends ethereum.Event {
  get params(): PoolRemoved__Params {
    return new PoolRemoved__Params(this);
  }
}

export class PoolRemoved__Params {
  _event: PoolRemoved;

  constructor(event: PoolRemoved) {
    this._event = event;
  }

  get token(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get pool(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class SkippedIncorrectNonce extends ethereum.Event {
  get params(): SkippedIncorrectNonce__Params {
    return new SkippedIncorrectNonce__Params(this);
  }
}

export class SkippedIncorrectNonce__Params {
  _event: SkippedIncorrectNonce;

  constructor(event: SkippedIncorrectNonce) {
    this._event = event;
  }

  get nonce(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get sender(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class SkippedSenderWithPreviousRampMessageInflight extends ethereum.Event {
  get params(): SkippedSenderWithPreviousRampMessageInflight__Params {
    return new SkippedSenderWithPreviousRampMessageInflight__Params(this);
  }
}

export class SkippedSenderWithPreviousRampMessageInflight__Params {
  _event: SkippedSenderWithPreviousRampMessageInflight;

  constructor(event: SkippedSenderWithPreviousRampMessageInflight) {
    this._event = event;
  }

  get nonce(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get sender(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Transmitted extends ethereum.Event {
  get params(): Transmitted__Params {
    return new Transmitted__Params(this);
  }
}

export class Transmitted__Params {
  _event: Transmitted;

  constructor(event: Transmitted) {
    this._event = event;
  }

  get configDigest(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get epoch(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class EVM2EVMOffRamp__currentRateLimiterStateResultValue0Struct extends ethereum.Tuple {
  get tokens(): BigInt {
    return this[0].toBigInt();
  }

  get lastUpdated(): BigInt {
    return this[1].toBigInt();
  }

  get isEnabled(): boolean {
    return this[2].toBoolean();
  }

  get capacity(): BigInt {
    return this[3].toBigInt();
  }

  get rate(): BigInt {
    return this[4].toBigInt();
  }
}

export class EVM2EVMOffRamp__getDynamicConfigResultValue0Struct extends ethereum.Tuple {
  get permissionLessExecutionThresholdSeconds(): BigInt {
    return this[0].toBigInt();
  }

  get router(): Address {
    return this[1].toAddress();
  }

  get priceRegistry(): Address {
    return this[2].toAddress();
  }

  get maxNumberOfTokensPerMsg(): i32 {
    return this[3].toI32();
  }

  get maxDataBytes(): BigInt {
    return this[4].toBigInt();
  }

  get maxPoolReleaseOrMintGas(): BigInt {
    return this[5].toBigInt();
  }
}

export class EVM2EVMOffRamp__getStaticConfigResultValue0Struct extends ethereum.Tuple {
  get commitStore(): Address {
    return this[0].toAddress();
  }

  get chainSelector(): BigInt {
    return this[1].toBigInt();
  }

  get sourceChainSelector(): BigInt {
    return this[2].toBigInt();
  }

  get onRamp(): Address {
    return this[3].toAddress();
  }

  get prevOffRamp(): Address {
    return this[4].toAddress();
  }

  get armProxy(): Address {
    return this[5].toAddress();
  }
}

export class EVM2EVMOffRamp__latestConfigDetailsResult {
  value0: BigInt;
  value1: BigInt;
  value2: Bytes;

  constructor(value0: BigInt, value1: BigInt, value2: Bytes) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromFixedBytes(this.value2));
    return map;
  }

  getConfigCount(): BigInt {
    return this.value0;
  }

  getBlockNumber(): BigInt {
    return this.value1;
  }

  getConfigDigest(): Bytes {
    return this.value2;
  }
}

export class EVM2EVMOffRamp__latestConfigDigestAndEpochResult {
  value0: boolean;
  value1: Bytes;
  value2: BigInt;

  constructor(value0: boolean, value1: Bytes, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set("value1", ethereum.Value.fromFixedBytes(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }

  getScanLogs(): boolean {
    return this.value0;
  }

  getConfigDigest(): Bytes {
    return this.value1;
  }

  getEpoch(): BigInt {
    return this.value2;
  }
}

export class EVM2EVMOffRamp extends ethereum.SmartContract {
  static bind(address: Address): EVM2EVMOffRamp {
    return new EVM2EVMOffRamp("EVM2EVMOffRamp", address);
  }

  currentRateLimiterState(): EVM2EVMOffRamp__currentRateLimiterStateResultValue0Struct {
    let result = super.call(
      "currentRateLimiterState",
      "currentRateLimiterState():((uint128,uint32,bool,uint128,uint128))",
      [],
    );

    return changetype<EVM2EVMOffRamp__currentRateLimiterStateResultValue0Struct>(
      result[0].toTuple(),
    );
  }

  try_currentRateLimiterState(): ethereum.CallResult<EVM2EVMOffRamp__currentRateLimiterStateResultValue0Struct> {
    let result = super.tryCall(
      "currentRateLimiterState",
      "currentRateLimiterState():((uint128,uint32,bool,uint128,uint128))",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<EVM2EVMOffRamp__currentRateLimiterStateResultValue0Struct>(
        value[0].toTuple(),
      ),
    );
  }

  getDestinationToken(sourceToken: Address): Address {
    let result = super.call(
      "getDestinationToken",
      "getDestinationToken(address):(address)",
      [ethereum.Value.fromAddress(sourceToken)],
    );

    return result[0].toAddress();
  }

  try_getDestinationToken(sourceToken: Address): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getDestinationToken",
      "getDestinationToken(address):(address)",
      [ethereum.Value.fromAddress(sourceToken)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getDestinationTokens(): Array<Address> {
    let result = super.call(
      "getDestinationTokens",
      "getDestinationTokens():(address[])",
      [],
    );

    return result[0].toAddressArray();
  }

  try_getDestinationTokens(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getDestinationTokens",
      "getDestinationTokens():(address[])",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getDynamicConfig(): EVM2EVMOffRamp__getDynamicConfigResultValue0Struct {
    let result = super.call(
      "getDynamicConfig",
      "getDynamicConfig():((uint32,address,address,uint16,uint32,uint32))",
      [],
    );

    return changetype<EVM2EVMOffRamp__getDynamicConfigResultValue0Struct>(
      result[0].toTuple(),
    );
  }

  try_getDynamicConfig(): ethereum.CallResult<EVM2EVMOffRamp__getDynamicConfigResultValue0Struct> {
    let result = super.tryCall(
      "getDynamicConfig",
      "getDynamicConfig():((uint32,address,address,uint16,uint32,uint32))",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<EVM2EVMOffRamp__getDynamicConfigResultValue0Struct>(
        value[0].toTuple(),
      ),
    );
  }

  getExecutionState(sequenceNumber: BigInt): i32 {
    let result = super.call(
      "getExecutionState",
      "getExecutionState(uint64):(uint8)",
      [ethereum.Value.fromUnsignedBigInt(sequenceNumber)],
    );

    return result[0].toI32();
  }

  try_getExecutionState(sequenceNumber: BigInt): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "getExecutionState",
      "getExecutionState(uint64):(uint8)",
      [ethereum.Value.fromUnsignedBigInt(sequenceNumber)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  getPoolByDestToken(destToken: Address): Address {
    let result = super.call(
      "getPoolByDestToken",
      "getPoolByDestToken(address):(address)",
      [ethereum.Value.fromAddress(destToken)],
    );

    return result[0].toAddress();
  }

  try_getPoolByDestToken(destToken: Address): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getPoolByDestToken",
      "getPoolByDestToken(address):(address)",
      [ethereum.Value.fromAddress(destToken)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getPoolBySourceToken(sourceToken: Address): Address {
    let result = super.call(
      "getPoolBySourceToken",
      "getPoolBySourceToken(address):(address)",
      [ethereum.Value.fromAddress(sourceToken)],
    );

    return result[0].toAddress();
  }

  try_getPoolBySourceToken(sourceToken: Address): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getPoolBySourceToken",
      "getPoolBySourceToken(address):(address)",
      [ethereum.Value.fromAddress(sourceToken)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getSenderNonce(sender: Address): BigInt {
    let result = super.call(
      "getSenderNonce",
      "getSenderNonce(address):(uint64)",
      [ethereum.Value.fromAddress(sender)],
    );

    return result[0].toBigInt();
  }

  try_getSenderNonce(sender: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getSenderNonce",
      "getSenderNonce(address):(uint64)",
      [ethereum.Value.fromAddress(sender)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getStaticConfig(): EVM2EVMOffRamp__getStaticConfigResultValue0Struct {
    let result = super.call(
      "getStaticConfig",
      "getStaticConfig():((address,uint64,uint64,address,address,address))",
      [],
    );

    return changetype<EVM2EVMOffRamp__getStaticConfigResultValue0Struct>(
      result[0].toTuple(),
    );
  }

  try_getStaticConfig(): ethereum.CallResult<EVM2EVMOffRamp__getStaticConfigResultValue0Struct> {
    let result = super.tryCall(
      "getStaticConfig",
      "getStaticConfig():((address,uint64,uint64,address,address,address))",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<EVM2EVMOffRamp__getStaticConfigResultValue0Struct>(
        value[0].toTuple(),
      ),
    );
  }

  getSupportedTokens(): Array<Address> {
    let result = super.call(
      "getSupportedTokens",
      "getSupportedTokens():(address[])",
      [],
    );

    return result[0].toAddressArray();
  }

  try_getSupportedTokens(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getSupportedTokens",
      "getSupportedTokens():(address[])",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getTokenLimitAdmin(): Address {
    let result = super.call(
      "getTokenLimitAdmin",
      "getTokenLimitAdmin():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_getTokenLimitAdmin(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getTokenLimitAdmin",
      "getTokenLimitAdmin():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getTransmitters(): Array<Address> {
    let result = super.call(
      "getTransmitters",
      "getTransmitters():(address[])",
      [],
    );

    return result[0].toAddressArray();
  }

  try_getTransmitters(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getTransmitters",
      "getTransmitters():(address[])",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  latestConfigDetails(): EVM2EVMOffRamp__latestConfigDetailsResult {
    let result = super.call(
      "latestConfigDetails",
      "latestConfigDetails():(uint32,uint32,bytes32)",
      [],
    );

    return new EVM2EVMOffRamp__latestConfigDetailsResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBytes(),
    );
  }

  try_latestConfigDetails(): ethereum.CallResult<EVM2EVMOffRamp__latestConfigDetailsResult> {
    let result = super.tryCall(
      "latestConfigDetails",
      "latestConfigDetails():(uint32,uint32,bytes32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new EVM2EVMOffRamp__latestConfigDetailsResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBytes(),
      ),
    );
  }

  latestConfigDigestAndEpoch(): EVM2EVMOffRamp__latestConfigDigestAndEpochResult {
    let result = super.call(
      "latestConfigDigestAndEpoch",
      "latestConfigDigestAndEpoch():(bool,bytes32,uint32)",
      [],
    );

    return new EVM2EVMOffRamp__latestConfigDigestAndEpochResult(
      result[0].toBoolean(),
      result[1].toBytes(),
      result[2].toBigInt(),
    );
  }

  try_latestConfigDigestAndEpoch(): ethereum.CallResult<EVM2EVMOffRamp__latestConfigDigestAndEpochResult> {
    let result = super.tryCall(
      "latestConfigDigestAndEpoch",
      "latestConfigDigestAndEpoch():(bool,bytes32,uint32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new EVM2EVMOffRamp__latestConfigDigestAndEpochResult(
        value[0].toBoolean(),
        value[1].toBytes(),
        value[2].toBigInt(),
      ),
    );
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  typeAndVersion(): string {
    let result = super.call("typeAndVersion", "typeAndVersion():(string)", []);

    return result[0].toString();
  }

  try_typeAndVersion(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "typeAndVersion",
      "typeAndVersion():(string)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get staticConfig(): ConstructorCallStaticConfigStruct {
    return changetype<ConstructorCallStaticConfigStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }

  get sourceTokens(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }

  get pools(): Array<Address> {
    return this._call.inputValues[2].value.toAddressArray();
  }

  get rateLimiterConfig(): ConstructorCallRateLimiterConfigStruct {
    return changetype<ConstructorCallRateLimiterConfigStruct>(
      this._call.inputValues[3].value.toTuple(),
    );
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCallStaticConfigStruct extends ethereum.Tuple {
  get commitStore(): Address {
    return this[0].toAddress();
  }

  get chainSelector(): BigInt {
    return this[1].toBigInt();
  }

  get sourceChainSelector(): BigInt {
    return this[2].toBigInt();
  }

  get onRamp(): Address {
    return this[3].toAddress();
  }

  get prevOffRamp(): Address {
    return this[4].toAddress();
  }

  get armProxy(): Address {
    return this[5].toAddress();
  }
}

export class ConstructorCallRateLimiterConfigStruct extends ethereum.Tuple {
  get isEnabled(): boolean {
    return this[0].toBoolean();
  }

  get capacity(): BigInt {
    return this[1].toBigInt();
  }

  get rate(): BigInt {
    return this[2].toBigInt();
  }
}

export class AcceptOwnershipCall extends ethereum.Call {
  get inputs(): AcceptOwnershipCall__Inputs {
    return new AcceptOwnershipCall__Inputs(this);
  }

  get outputs(): AcceptOwnershipCall__Outputs {
    return new AcceptOwnershipCall__Outputs(this);
  }
}

export class AcceptOwnershipCall__Inputs {
  _call: AcceptOwnershipCall;

  constructor(call: AcceptOwnershipCall) {
    this._call = call;
  }
}

export class AcceptOwnershipCall__Outputs {
  _call: AcceptOwnershipCall;

  constructor(call: AcceptOwnershipCall) {
    this._call = call;
  }
}

export class ApplyPoolUpdatesCall extends ethereum.Call {
  get inputs(): ApplyPoolUpdatesCall__Inputs {
    return new ApplyPoolUpdatesCall__Inputs(this);
  }

  get outputs(): ApplyPoolUpdatesCall__Outputs {
    return new ApplyPoolUpdatesCall__Outputs(this);
  }
}

export class ApplyPoolUpdatesCall__Inputs {
  _call: ApplyPoolUpdatesCall;

  constructor(call: ApplyPoolUpdatesCall) {
    this._call = call;
  }

  get removes(): Array<ApplyPoolUpdatesCallRemovesStruct> {
    return this._call.inputValues[0].value.toTupleArray<ApplyPoolUpdatesCallRemovesStruct>();
  }

  get adds(): Array<ApplyPoolUpdatesCallAddsStruct> {
    return this._call.inputValues[1].value.toTupleArray<ApplyPoolUpdatesCallAddsStruct>();
  }
}

export class ApplyPoolUpdatesCall__Outputs {
  _call: ApplyPoolUpdatesCall;

  constructor(call: ApplyPoolUpdatesCall) {
    this._call = call;
  }
}

export class ApplyPoolUpdatesCallRemovesStruct extends ethereum.Tuple {
  get token(): Address {
    return this[0].toAddress();
  }

  get pool(): Address {
    return this[1].toAddress();
  }
}

export class ApplyPoolUpdatesCallAddsStruct extends ethereum.Tuple {
  get token(): Address {
    return this[0].toAddress();
  }

  get pool(): Address {
    return this[1].toAddress();
  }
}

export class ExecuteSingleMessageCall extends ethereum.Call {
  get inputs(): ExecuteSingleMessageCall__Inputs {
    return new ExecuteSingleMessageCall__Inputs(this);
  }

  get outputs(): ExecuteSingleMessageCall__Outputs {
    return new ExecuteSingleMessageCall__Outputs(this);
  }
}

export class ExecuteSingleMessageCall__Inputs {
  _call: ExecuteSingleMessageCall;

  constructor(call: ExecuteSingleMessageCall) {
    this._call = call;
  }

  get message(): ExecuteSingleMessageCallMessageStruct {
    return changetype<ExecuteSingleMessageCallMessageStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }

  get offchainTokenData(): Array<Bytes> {
    return this._call.inputValues[1].value.toBytesArray();
  }
}

export class ExecuteSingleMessageCall__Outputs {
  _call: ExecuteSingleMessageCall;

  constructor(call: ExecuteSingleMessageCall) {
    this._call = call;
  }
}

export class ExecuteSingleMessageCallMessageStruct extends ethereum.Tuple {
  get sourceChainSelector(): BigInt {
    return this[0].toBigInt();
  }

  get sender(): Address {
    return this[1].toAddress();
  }

  get receiver(): Address {
    return this[2].toAddress();
  }

  get sequenceNumber(): BigInt {
    return this[3].toBigInt();
  }

  get gasLimit(): BigInt {
    return this[4].toBigInt();
  }

  get strict(): boolean {
    return this[5].toBoolean();
  }

  get nonce(): BigInt {
    return this[6].toBigInt();
  }

  get feeToken(): Address {
    return this[7].toAddress();
  }

  get feeTokenAmount(): BigInt {
    return this[8].toBigInt();
  }

  get data(): Bytes {
    return this[9].toBytes();
  }

  get tokenAmounts(): Array<ExecuteSingleMessageCallMessageTokenAmountsStruct> {
    return this[10].toTupleArray<ExecuteSingleMessageCallMessageTokenAmountsStruct>();
  }

  get sourceTokenData(): Array<Bytes> {
    return this[11].toBytesArray();
  }

  get messageId(): Bytes {
    return this[12].toBytes();
  }
}

export class ExecuteSingleMessageCallMessageTokenAmountsStruct extends ethereum.Tuple {
  get token(): Address {
    return this[0].toAddress();
  }

  get amount(): BigInt {
    return this[1].toBigInt();
  }
}

export class ManuallyExecuteCall extends ethereum.Call {
  get inputs(): ManuallyExecuteCall__Inputs {
    return new ManuallyExecuteCall__Inputs(this);
  }

  get outputs(): ManuallyExecuteCall__Outputs {
    return new ManuallyExecuteCall__Outputs(this);
  }
}

export class ManuallyExecuteCall__Inputs {
  _call: ManuallyExecuteCall;

  constructor(call: ManuallyExecuteCall) {
    this._call = call;
  }

  get report(): ManuallyExecuteCallReportStruct {
    return changetype<ManuallyExecuteCallReportStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }

  get gasLimitOverrides(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class ManuallyExecuteCall__Outputs {
  _call: ManuallyExecuteCall;

  constructor(call: ManuallyExecuteCall) {
    this._call = call;
  }
}

export class ManuallyExecuteCallReportStruct extends ethereum.Tuple {
  get messages(): Array<ManuallyExecuteCallReportMessagesStruct> {
    return this[0].toTupleArray<ManuallyExecuteCallReportMessagesStruct>();
  }

  get offchainTokenData(): Array<Array<Bytes>> {
    return this[1].toBytesMatrix();
  }

  get proofs(): Array<Bytes> {
    return this[2].toBytesArray();
  }

  get proofFlagBits(): BigInt {
    return this[3].toBigInt();
  }
}

export class ManuallyExecuteCallReportMessagesStruct extends ethereum.Tuple {
  get sourceChainSelector(): BigInt {
    return this[0].toBigInt();
  }

  get sender(): Address {
    return this[1].toAddress();
  }

  get receiver(): Address {
    return this[2].toAddress();
  }

  get sequenceNumber(): BigInt {
    return this[3].toBigInt();
  }

  get gasLimit(): BigInt {
    return this[4].toBigInt();
  }

  get strict(): boolean {
    return this[5].toBoolean();
  }

  get nonce(): BigInt {
    return this[6].toBigInt();
  }

  get feeToken(): Address {
    return this[7].toAddress();
  }

  get feeTokenAmount(): BigInt {
    return this[8].toBigInt();
  }

  get data(): Bytes {
    return this[9].toBytes();
  }

  get tokenAmounts(): Array<ManuallyExecuteCallReportMessagesTokenAmountsStruct> {
    return this[10].toTupleArray<ManuallyExecuteCallReportMessagesTokenAmountsStruct>();
  }

  get sourceTokenData(): Array<Bytes> {
    return this[11].toBytesArray();
  }

  get messageId(): Bytes {
    return this[12].toBytes();
  }
}

export class ManuallyExecuteCallReportMessagesTokenAmountsStruct extends ethereum.Tuple {
  get token(): Address {
    return this[0].toAddress();
  }

  get amount(): BigInt {
    return this[1].toBigInt();
  }
}

export class SetAdminCall extends ethereum.Call {
  get inputs(): SetAdminCall__Inputs {
    return new SetAdminCall__Inputs(this);
  }

  get outputs(): SetAdminCall__Outputs {
    return new SetAdminCall__Outputs(this);
  }
}

export class SetAdminCall__Inputs {
  _call: SetAdminCall;

  constructor(call: SetAdminCall) {
    this._call = call;
  }

  get newAdmin(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetAdminCall__Outputs {
  _call: SetAdminCall;

  constructor(call: SetAdminCall) {
    this._call = call;
  }
}

export class SetOCR2ConfigCall extends ethereum.Call {
  get inputs(): SetOCR2ConfigCall__Inputs {
    return new SetOCR2ConfigCall__Inputs(this);
  }

  get outputs(): SetOCR2ConfigCall__Outputs {
    return new SetOCR2ConfigCall__Outputs(this);
  }
}

export class SetOCR2ConfigCall__Inputs {
  _call: SetOCR2ConfigCall;

  constructor(call: SetOCR2ConfigCall) {
    this._call = call;
  }

  get signers(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get transmitters(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }

  get f(): i32 {
    return this._call.inputValues[2].value.toI32();
  }

  get onchainConfig(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }

  get offchainConfigVersion(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get offchainConfig(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }
}

export class SetOCR2ConfigCall__Outputs {
  _call: SetOCR2ConfigCall;

  constructor(call: SetOCR2ConfigCall) {
    this._call = call;
  }
}

export class SetRateLimiterConfigCall extends ethereum.Call {
  get inputs(): SetRateLimiterConfigCall__Inputs {
    return new SetRateLimiterConfigCall__Inputs(this);
  }

  get outputs(): SetRateLimiterConfigCall__Outputs {
    return new SetRateLimiterConfigCall__Outputs(this);
  }
}

export class SetRateLimiterConfigCall__Inputs {
  _call: SetRateLimiterConfigCall;

  constructor(call: SetRateLimiterConfigCall) {
    this._call = call;
  }

  get config(): SetRateLimiterConfigCallConfigStruct {
    return changetype<SetRateLimiterConfigCallConfigStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }
}

export class SetRateLimiterConfigCall__Outputs {
  _call: SetRateLimiterConfigCall;

  constructor(call: SetRateLimiterConfigCall) {
    this._call = call;
  }
}

export class SetRateLimiterConfigCallConfigStruct extends ethereum.Tuple {
  get isEnabled(): boolean {
    return this[0].toBoolean();
  }

  get capacity(): BigInt {
    return this[1].toBigInt();
  }

  get rate(): BigInt {
    return this[2].toBigInt();
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class TransmitCall extends ethereum.Call {
  get inputs(): TransmitCall__Inputs {
    return new TransmitCall__Inputs(this);
  }

  get outputs(): TransmitCall__Outputs {
    return new TransmitCall__Outputs(this);
  }
}

export class TransmitCall__Inputs {
  _call: TransmitCall;

  constructor(call: TransmitCall) {
    this._call = call;
  }

  get reportContext(): Array<Bytes> {
    return this._call.inputValues[0].value.toBytesArray();
  }

  get report(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get rs(): Array<Bytes> {
    return this._call.inputValues[2].value.toBytesArray();
  }

  get ss(): Array<Bytes> {
    return this._call.inputValues[3].value.toBytesArray();
  }

  get value4(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class TransmitCall__Outputs {
  _call: TransmitCall;

  constructor(call: TransmitCall) {
    this._call = call;
  }
}
